(https://leetcode.com/problems/spiral-matrix/)
Given a 2D array, print it in spiral form

Input:
        1    2   3   4
        5    6   7   8
        9   10  11  12
        13  14  15  16
Output:
1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10

Input2:
        1   2   3   4  5   6
        7   8   9  10  11  12
        13  14  15 16  17  18
Output2:
1 2 3 4 5 6 12 18 17 16 15 14 13 7 8 9 10 11

enum {
  LEFT,
  RIGHT,
  DOWN,
  UP
  }direction;
  
// TODO: finish me
void printSpiral(int array[][]) {
    if (array == null) {
           return;
     }
     
     int minRows = 0, minCols = 0, maxRows = array[0].length, maxCols = 
     int j = 0; int i = 0;
     direction dir = RIGHT;
 
     boolean rowDone = false;
     boolean columnDone = false;   
     while (true) {
         direction last = dir; 
         while (true) { // col
             if (dir == RIGHT) {
                 System.out.printf("%d ", array[i][j]);
                 j++;
                 
                 if (j >= columns) {
                   dir = DOWN;
                   break;
                 } 
             }
             else if (dir == LEFT) {
                 System.out.printf("%d ", array[i][j]);
                 j--;
                 
                 if (j <= 0) {
                     dir = UP;
                     break;
                 }
             }
             else if (dir == DOWN) {
              System.out.printf("%d ", array[i][j]);
              i++;
             
              if (i >= rows) {
                dir = LEFT;
                break;
              }
             } else if (dir == UP) {
                 System.out.printf("%d ", array[i][j];
                 i--;
                 
                 if (i <= 0) {
                   dir = RIGHT;
                   break;
                 }  
             }
         }
     }
}
